name: Lint and test

env:
  BACKEND_IMAGE_NAME: nbe95/keinplan-backend
  FRONTEND_IMAGE_NAME: nbe95/keinplan-frontend

on:
  pull_request:
    types:
      - labeled
      - unlabeled
      - opened
      - reopened
      - synchronize
      - ready_for_review

jobs:
  validate-release:
    name: Validate release label and notes
    runs-on: ubuntu-latest
    if: github.base_ref == 'main'
    steps:
      - uses: actions/checkout@v4
      - uses: jefflinse/pr-semver-bump@v1.7.0
        name: Bump and tag new version
        with:
          mode: validate
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          major-label: major
          minor-label: minor
          patch-label: patch
          noop-labels: ""
          require-release-notes: false
          base-branch: true
          with-v: false

  lint-backend:
    name: Lint the backend code
    runs-on: ubuntu-latest
    needs:
      - validate-release
    defaults:
      run:
        working-directory: ./backend/
    steps:
      - uses: actions/checkout@v4
      - name: Set up PDM
        uses: pdm-project/setup-pdm@v3
        with:
          python-version: "3.11"
      - name: Install dependencies
        run: |
          pdm sync -d
      - name: Run linters
        run: |
          pdm run lint

  lint-frontend:
    name: Lint the frontend code
    runs-on: ubuntu-latest
    needs:
      - validate-release
    defaults:
      run:
        working-directory: ./frontend/
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 18
      - name: Install dev-dependencies
        run: |
          npm install --only=dev
      - name: Run linters
        run: |
          npm run lint
      - name: Perform type check
        run: |
          npx tsc

  create-docker-images:
    name: Build and publish Docker images
    runs-on: ubuntu-latest
    needs:
      - lint-frontend
      - lint-backend
    steps:
      - uses: actions/checkout@v4
      - name: Get commit data
        id: commit
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
      - name: Build and push backend
        uses: docker/build-push-action@v5
        with:
          file: ./backend/Dockerfile
          context: ./backend/
          build-args: |
            VERSION=${{ steps.commit.outputs.sha_short }}-testing
          push: true
          tags: |
            ${{ env.BACKEND_IMAGE_NAME }}:testing
      - name: Build and push frontend
        uses: docker/build-push-action@v5
        with:
          file: ./frontend/Dockerfile
          context: ./frontend/
          build-args: |
            VERSION=${{ steps.commit.outputs.sha_short }}-testing
          push: true
          tags: |
            ${{ env.BACKEND_IMAGE_NAME }}:testing

  deploy-testing:
    name: Deploy to testing environment
    runs-on: ubuntu-latest
    needs:
      - create-docker-images
    environment:
      name: testing
    steps:
      - name: Call webhook
        run: |
          curl -s -X POST "${{ secrets.DEPLOYMENT_WEBHOOK }}?DEPLOY_TAG=testing"

  test-e2e:
    runs-on: ubuntu-latest
    needs:
      - deploy-testing
    steps:
      - uses: actions/checkout@v4
      # Install npm dependencies, cache them correctly and run all Cypress tests
      - name: Cypress run
        uses: cypress-io/github-action@v6
